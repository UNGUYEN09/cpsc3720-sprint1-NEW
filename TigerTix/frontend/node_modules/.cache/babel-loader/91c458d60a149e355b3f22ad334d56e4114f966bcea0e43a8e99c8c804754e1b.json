{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doggo\\\\Documents\\\\GitHub\\\\sprint1\\\\cpsc3720-sprint1-NEW\\\\TigerTix\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [purchaseMessage, setPurchaseMessage] = useState('');\n\n  /*\r\n  fetchEvents()\r\n  PURPOSE: Fetches event data by making a call to client-service.\r\n  INPUTS: n/a\r\n  OUTPUTS: n/a\r\n  */\n  const fetchEvents = () => {\n    fetch('http://localhost:6001/api/events').then(res => res.json()).then(data => setEvents(data)).catch(err => console.error('Error fetching events:', err));\n  };\n\n  /*\r\n  useEffect()\r\n  PURPOSE: Initalizes events and refreshes events.\r\n  INPUTS: n/a\r\n  OUTPUTS: n/a\r\n  */\n  useEffect(() => {\n    // Initial fetch\n    fetchEvents();\n\n    // Set up polling every 5 seconds\n    const interval = setInterval(fetchEvents, 5000);\n\n    // Cleanup on component unmount\n    return () => clearInterval(interval);\n  }, []);\n\n  /*\r\n  buyTicket(id, name)\r\n  PURPOSE: Decrements total number of tickets for a specific event by 1 by calling client-service.\r\n  INPUTS: const id - Event ID, name - User name\r\n  OUTPUTS: n/a\r\n  */\n  const buyTicket = (id, name) => {\n    fetch(`http://localhost:6001/api/events/${id}/purchase`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(() => {\n      setPurchaseMessage(`Successfully purchased ticket for ${name}`);\n      fetchEvents(); // refresh immediately after purchase\n    }).catch(() => setPurchaseMessage('Error purchasing ticket.'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TigerTix Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"aria-live\": \"polite\",\n      children: purchaseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: purchaseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"event-grid\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"event-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", event.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Tickets: \", event.ticketsAvailable]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), event.ticketsAvailable > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => buyTicket(event.id, event.name),\n          \"aria-label\": `Buy ticket for ${event.name}`,\n          children: \"Buy Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          \"aria-label\": `${event.name} is sold out`,\n          style: {\n            backgroundColor: '#95a5a6',\n            cursor: 'not-allowed'\n          },\n          children: \"Sold Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OnVZY9lEWItSZXBGhHT3fAjunwY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","events","setEvents","purchaseMessage","setPurchaseMessage","fetchEvents","fetch","then","res","json","data","catch","err","console","error","interval","setInterval","clearInterval","buyTicket","id","name","method","headers","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","event","date","ticketsAvailable","onClick","disabled","style","backgroundColor","cursor","_c","$RefreshReg$"],"sources":["C:/Users/doggo/Documents/GitHub/sprint1/cpsc3720-sprint1-NEW/TigerTix/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [events, setEvents] = useState([]);\r\n  const [purchaseMessage, setPurchaseMessage] = useState('');\r\n\r\n  /*\r\n  fetchEvents()\r\n  PURPOSE: Fetches event data by making a call to client-service.\r\n  INPUTS: n/a\r\n  OUTPUTS: n/a\r\n  */\r\n  const fetchEvents = () => {\r\n    fetch('http://localhost:6001/api/events')\r\n      .then((res) => res.json())\r\n      .then((data) => setEvents(data))\r\n      .catch((err) => console.error('Error fetching events:', err));\r\n  };\r\n\r\n  /*\r\n  useEffect()\r\n  PURPOSE: Initalizes events and refreshes events.\r\n  INPUTS: n/a\r\n  OUTPUTS: n/a\r\n  */\r\n  useEffect(() => {\r\n    // Initial fetch\r\n    fetchEvents();\r\n\r\n    // Set up polling every 5 seconds\r\n    const interval = setInterval(fetchEvents, 5000);\r\n\r\n    // Cleanup on component unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  /*\r\n  buyTicket(id, name)\r\n  PURPOSE: Decrements total number of tickets for a specific event by 1 by calling client-service.\r\n  INPUTS: const id - Event ID, name - User name\r\n  OUTPUTS: n/a\r\n  */\r\n  const buyTicket = (id, name) => {\r\n    fetch(`http://localhost:6001/api/events/${id}/purchase`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(() => {\r\n        setPurchaseMessage(`Successfully purchased ticket for ${name}`);\r\n        fetchEvents(); // refresh immediately after purchase\r\n      })\r\n      .catch(() => setPurchaseMessage('Error purchasing ticket.'));\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>TigerTix Events</h1>\r\n\r\n      <div aria-live=\"polite\">\r\n        {purchaseMessage && <p>{purchaseMessage}</p>}\r\n      </div>\r\n\r\n      {events.length === 0 ? (\r\n        <p>No events available</p>\r\n      ) : (\r\n        <ul className=\"event-grid\">\r\n          {events.map((event) => (\r\n            <li key={event.id} className=\"event-card\">\r\n              <h2>{event.name}</h2>\r\n              <p>Date: {event.date}</p>\r\n              <p>Tickets: {event.ticketsAvailable}</p>\r\n\r\n              {event.ticketsAvailable > 0 ? (\r\n                <button\r\n                  onClick={() => buyTicket(event.id, event.name)}\r\n                  aria-label={`Buy ticket for ${event.name}`}\r\n                >\r\n                  Buy Ticket\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  disabled\r\n                  aria-label={`${event.name} is sold out`}\r\n                  style={{ backgroundColor: '#95a5a6', cursor: 'not-allowed' }}\r\n                >\r\n                  Sold Out\r\n                </button>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}